#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_USUARIOS 1000

struct Usuario {
    int id;
    char nome[100];
    char email[100];
    char sexo[20];
    char endereco[100];
    double altura;
    int vacina;
};

struct Usuario usuarios[MAX_USUARIOS];
int quantidadeUsuarios = 0;

int gerarId() {
    srand(time(NULL));
    return rand();
}

void incluirUsuario() {
    if (quantidadeUsuarios < MAX_USUARIOS) {
        struct Usuario novoUsuario;
        novoUsuario.id = gerarId();

        printf("Nome completo: ");
        scanf(" %[^\n]s", novoUsuario.nome);

        printf("Email: ");
        scanf("%s", novoUsuario.email);

        do {
            printf("Sexo (Feminino, Masculino, Indiferente): ");
            scanf("%s", novoUsuario.sexo);
        } while (strcmp(novoUsuario.sexo, "Feminino") != 0 && strcmp(novoUsuario.sexo, "Masculino") != 0 &&
                 strcmp(novoUsuario.sexo, "Indiferente") != 0);

        printf("Endereço: ");
        scanf(" %[^\n]s", novoUsuario.endereco);

        do {
            printf("Altura (entre 1 e 2 metros): ");
            scanf("%lf", &novoUsuario.altura);
        } while (novoUsuario.altura < 1 || novoUsuario.altura > 2);

        do {
            printf("Recebeu a vacina? (1 para sim, 0 para não): ");
            scanf("%d", &novoUsuario.vacina);
        } while (novoUsuario.vacina != 0 && novoUsuario.vacina != 1);

        usuarios[quantidadeUsuarios] = novoUsuario;
        quantidadeUsuarios++;

        printf("Usuário cadastrado com sucesso!\n");
    } else {
        printf("Limite de usuários atingido.\n");
    }
}

void buscarUsuarioPorEmail() {
    char emailBusca[100];
    printf("Digite o email do usuário que deseja buscar: ");
    scanf("%s", emailBusca);

    int encontrado = 0;
    for (int i = 0; i < quantidadeUsuarios; i++) {
        if (strcmp(usuarios[i].email, emailBusca) == 0) {
            printf("Usuário encontrado:\n");
            printf("ID: %d\n", usuarios[i].id);
            printf("Nome: %s\n", usuarios[i].nome);
            printf("Email: %s\n", usuarios[i].email);
            printf("Sexo: %s\n", usuarios[i].sexo);
            printf("Endereço: %s\n", usuarios[i].endereco);
            printf("Altura: %.2lf\n", usuarios[i].altura);
            printf("Vacina: %s\n", usuarios[i].vacina ? "Sim" : "Não");
            encontrado = 1;
            break;
        }
    }

    if (!encontrado) {
        printf("Usuário não encontrado.\n");
    }
}

void imprimirUsuarios() {
    printf("Lista de Usuários:\n");
    for (int i = 0; i < quantidadeUsuarios; i++) {
        printf("ID: %d\n", usuarios[i].id);
        printf("Nome: %s\n", usuarios[i].nome);
        printf("Email: %s\n", usuarios[i].email);
        printf("Sexo: %s\n", usuarios[i].sexo);
        printf("Endereço: %s\n", usuarios[i].endereco);
        printf("Altura: %.2lf\n", usuarios[i].altura);
        printf("Vacina: %s\n", usuarios[i].vacina ? "Sim" : "Não");
        printf("-----------------------------\n");
    }
}

int main() {
    char opcao;

    do {
        printf("\nEscolha uma opção:\n");
        printf("1. Incluir usuário\n");
        printf("2. Editar usuário (em desenvolvimento)\n");
        printf("3. Excluir usuário (em desenvolvimento)\n");
        printf("4. Buscar usuário por email\n");
        printf("5. Imprimir todos os usuários\n");
        printf("0. Sair\n");

        scanf(" %c", &opcao);

        switch (opcao) {
            case '1':
                incluirUsuario();
                break;
            case '2':
                printf("Opção ainda não implementada.\n");
                break;
            case '3':
                printf("Opção ainda não implementada.\n");
                break;
            case '4':
                buscarUsuarioPorEmail();
                break;
            case '5':
                imprimirUsuarios();
                break;
            case '0':
                printf("Programa encerrado.\n");
                break;
            default:
                printf("Opção inválida. Tente novamente.\n");
                break;
        }
    } while (opcao != '0');

    return 0;
}
